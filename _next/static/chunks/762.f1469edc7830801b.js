"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[762],{38762:function(e,t,n){n.d(t,{default:function(){return w}});var i=n(69962),s=n(40197),r=n(10123),a=n(81545),c=n(17273),o=n(795).Buffer;let d=[{vendorId:r.An}],u=()=>Promise.resolve(!!(window.navigator&&window.navigator.hid)),l=()=>{let{hid:e}=navigator;if(!e)throw new c.PS("navigator.hid is not supported","HIDNotSupported");return e};async function p(){let e=await l().requestDevice({filters:d});return Array.isArray(e)?e:[e]}async function h(){return(await l().getDevices()).filter(e=>e.vendorId===r.An)}async function v(){let e=await h();return e.length>0?e[0]:(await p())[0]}class w extends i.ZP{device;deviceModel;channel=Math.floor(65535*Math.random());packetSize=64;constructor(e){super(),this.device=e,this.deviceModel="number"==typeof e.productId?(0,r.Ht)(e.productId):void 0,e.addEventListener("inputreport",this.onInputReport)}inputs=[];inputCallback;read=()=>this.inputs.length?Promise.resolve(this.inputs.shift()):new Promise(e=>{this.inputCallback=e});onInputReport=e=>{let t=o.from(e.data.buffer);this.inputCallback?(this.inputCallback(t),this.inputCallback=null):this.inputs.push(t)};static isSupported=u;static list=h;static listen=e=>{let t=!1;return v().then(n=>{if(n){if(!t){let t="number"==typeof n.productId?(0,r.Ht)(n.productId):void 0;e.next({type:"add",descriptor:n,deviceModel:t}),e.complete()}}else e.error(new c.FB("Access denied to use Ledger device"))},t=>{e.error(new c.FB(t.message))}),{unsubscribe:function(){t=!0}}};static async request(){let[e]=await p();return w.open(e)}static async openConnected(){let e=await h();return 0===e.length?null:w.open(e[0])}static async open(e){await e.open();let t=new w(e),n=i=>{e===i.device&&(l().removeEventListener("disconnect",n),t._emitDisconnect(new c.qX))};return l().addEventListener("disconnect",n),t}_disconnectEmitted=!1;_emitDisconnect=e=>{this._disconnectEmitted||(this._disconnectEmitted=!0,this.emit("disconnect",e))};async close(){await this.exchangeBusyPromise,this.device.removeEventListener("inputreport",this.onInputReport),await this.device.close()}exchange=async e=>await this.exchangeAtomicImpl(async()=>{let t,n;let{channel:i,packetSize:r}=this;(0,a.cM)("apdu","=> "+e.toString("hex"));let o=(0,s.Z)(i,r),d=o.makeBlocks(e);for(let e=0;e<d.length;e++)await this.device.sendReport(0,d[e]);for(;!(t=o.getReducedResult(n));)try{let e=await this.read();n=o.reduceResponse(n,e)}catch(e){if(e instanceof c.PS&&"InvalidChannel"===e.id)continue;throw e}return(0,a.cM)("apdu","<= "+t.toString("hex")),t}).catch(e=>{if(e&&e.message&&e.message.includes("write"))throw this._emitDisconnect(e),new c.vs(e.message);throw e});setScrambleKey(){}}}}]);