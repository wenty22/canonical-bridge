"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[173],{28173:function(e,t,n){n.d(t,{default:function(){return w}});var i=n(69962),a=n(40197),c=n(10123),s=n(81545),r=n(17273);let o=[{vendorId:c.An}];async function u(){return await navigator.usb.requestDevice({filters:o})}async function d(){return(await navigator.usb.getDevices()).filter(e=>e.vendorId===c.An)}async function l(){let e=await d();return e.length>0?e[0]:u()}let f=()=>Promise.resolve(!!navigator&&!!navigator.usb&&"function"==typeof navigator.usb.getDevices);var h=n(795).Buffer;class w extends i.ZP{device;deviceModel;channel=Math.floor(65535*Math.random());packetSize=64;interfaceNumber;constructor(e,t){super(),this.device=e,this.interfaceNumber=t,this.deviceModel=(0,c.Ht)(e.productId)}static isSupported=f;static list=d;static listen=e=>{let t=!1;return l().then(n=>{if(!t){let t=(0,c.Ht)(n.productId);e.next({type:"add",descriptor:n,deviceModel:t}),e.complete()}},t=>{window.DOMException&&t instanceof window.DOMException&&18===t.code?e.error(new r.um(t.message)):e.error(new r.FB(t.message))}),{unsubscribe:function(){t=!0}}};static async request(){let e=await u();return w.open(e)}static async openConnected(){let e=await d();return 0===e.length?null:w.open(e[0])}static async open(e){await e.open(),null===e.configuration&&await e.selectConfiguration(1),await m(e);let t=e.configurations[0].interfaces.find(({alternates:e})=>e.some(e=>255===e.interfaceClass));if(!t)throw new r.$u("No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.");let n=t.interfaceNumber;try{await e.claimInterface(n)}catch(t){throw await e.close(),new r.$u(t.message)}let i=new w(e,n),a=t=>{e===t.device&&(navigator.usb.removeEventListener("disconnect",a),i._emitDisconnect(new r.qX))};return navigator.usb.addEventListener("disconnect",a),i}_disconnectEmitted=!1;_emitDisconnect=e=>{this._disconnectEmitted||(this._disconnectEmitted=!0,this.emit("disconnect",e))};async close(){await this.exchangeBusyPromise,await this.device.releaseInterface(this.interfaceNumber),await m(this.device),await this.device.close()}async exchange(e){return await this.exchangeAtomicImpl(async()=>{let t,n;let{channel:i,packetSize:c}=this;(0,s.cM)("apdu","=> "+e.toString("hex"));let r=(0,a.Z)(i,c),o=r.makeBlocks(e);for(let e=0;e<o.length;e++)await this.device.transferOut(3,o[e]);for(;!(t=r.getReducedResult(n));){let e=await this.device.transferIn(3,c),t=h.from(e.data.buffer);n=r.reduceResponse(n,t)}return(0,s.cM)("apdu","<= "+t.toString("hex")),t}).catch(e=>{if(e&&e.message&&e.message.includes("disconnected"))throw this._emitDisconnect(e),new r.vs(e.message);throw e})}setScrambleKey(){}}async function m(e){try{await e.reset()}catch(e){console.warn(e)}}}}]);